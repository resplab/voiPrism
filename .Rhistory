setwd("~/RESP")
library(devtools)
library(tidyverse)
library(fs)
create_package("hello_world")
create_package("helloworld")
library(peermodels)
model_run(method='evpi')
setwd("~/RESP/voiPrism/R")
model_run(method=='evpi')
model_run(method='evpi')
model_run()
model_run(method="evpi")
library(peermodels)
model_run(method="evpi")
install.packages('opencpu')
opencpy::start_server()
opencpu::start_server()
opencpu::start_server()
opencpu::start_server()
library(peermodels)
model_run("voi", method="evpi")
model_run("voi")
model_run("voi", api_key = "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")
model_run("voi", method="evpi")
model_run("voiPrism", method="evpi")
model_run("voiPrism")
library(voi)
model_run("voi")
model_run(model_name = "voi")
model_run(model_name = "voi", method="evpi")
library(opencpu)
opencpu::ocpu_start_server()
library(opencpy)
library(opencpu)
ocpu_start_server()
ocpu_start_server()
library(opencpu)
ocpu_start_server()
usethis::use_vignette("my-vignette")
library(devtools)
install_github("chjackson/voi")
install.packages(“pkgdown”)
install.packages(pkgdown)
install.packages('pkgdown')
pkgdown::build_site()
remotes::install_github('resplab/voiPrism')
pkgdown::build_site()
remotes::install_github('resplab/voiPrism')
remotes::install_github('resplab/voiPrism')
version.R
version
install.packages('unix')
remotes::install_github('resplab/voiPrism')
install.packages('unix')
remotes::install_github('resplab/voiPrism')
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
library(voi)
decision_current <- 2
nb_current <- 1
decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2)
nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2)
(evpi1 <- mean(nb_perfect) - nb_current)
install.packages('INLA', repos='https://inla.r-inla-download.org/R/stable')
install.packages('splancs')
devtools::install_version("ldr", version = "1.3.3", repos = "http://cran.uk.r-project.org")
evppi(outputs_nb, inputs, pars=c("p1","p2"), method="inla")
version''
version
devtools::install_github("resplab/voi.remote")
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
se <- FALSE
B <-  500
method <- NULL
verbose <- FALSE
library('voi.remote')
pars <- "p1"
nsim <- NULL
evppi.remote(outputs, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
remove.packages('peermodels')
remotes::install_github('resplab/peermodels')
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
library(peermodels)
reset_session()
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)$resp
evppi.remote <- function(outputs, inputs, pars, se, B, nsim, verbose, method, ...) {
model_input <- list(outputs=outputs, inputs=inputs, pars=pars, se=se, B=B, nsim=nsim, verbose=verbose, func='evppi', method=method, etc=...)
res <- peermodels::model_run(model_name='voi', model_input, api_key='aaHYJJb4hcrmBYY3')
return(res)
}
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)
evppi.remote(outputs_nb, inputs, pars, se, B, nsim, verbose, method)$resp
evpi.remote(outputs_nb)
evpi.remote(outputs_nb, nsim)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
devtools::install_github("resplab/voi.remote")
devtools::install_github("resplab/voi.remote")
library(voi.remote)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
nsim <- NULL
evpi.remote(outputs_nb, nsim)
