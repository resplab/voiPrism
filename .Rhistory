setwd("~/RESP")
library(devtools)
library(tidyverse)
library(fs)
create_package("hello_world")
create_package("helloworld")
library(peermodels)
model_run(method='evpi')
setwd("~/RESP/voiPrism/R")
model_run(method=='evpi')
model_run(method='evpi')
model_run()
model_run(method="evpi")
library(peermodels)
model_run(method="evpi")
install.packages('opencpu')
opencpy::start_server()
opencpu::start_server()
opencpu::start_server()
opencpu::start_server()
library(peermodels)
model_run("voi", method="evpi")
model_run("voi")
model_run("voi", api_key = "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")
model_run("voi", method="evpi")
model_run("voiPrism", method="evpi")
model_run("voiPrism")
library(voi)
model_run("voi")
model_run(model_name = "voi")
model_run(model_name = "voi", method="evpi")
library(opencpu)
opencpu::ocpu_start_server()
library(opencpy)
library(opencpu)
ocpu_start_server()
ocpu_start_server()
library(opencpu)
ocpu_start_server()
library(opencpu)
opencpu::ocpu_start_server()
library(peermodels)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, pars=list("p1","p2"), func="evppi", method="inla"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, pars=list("p1","p2"), func="evppi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, pars=list("p1",c("p1","p2")), func="evppi"))
docker pull opencpu/base
library(unix)
remove.packages('unix')
library(peermodels)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8899/ocpu", model_input = list(outputs = outputs_nb, func="evpi"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8899", model_input = list(outputs = outputs_nb, func="evpi"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8888", model_input = list(outputs = outputs_nb, func="evpi"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8888/ocpu", model_input = list(outputs = outputs_nb, func="evpi"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8888", model_input = list(outputs = outputs_nb, func="evpi"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:8888/ocpu", model_input = list(outputs = outputs_nb, func="evpi"))
setwd("~/RESP/voiPrism")
build_site()
library(peermodels)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
decision_current <- 2
nb_current <- 1
decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2)
nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2)
(evpi1 <- mean(nb_perfect) - nb_current)
opp_loss <- nb_perfect - nb_current
mean(opp_loss)
library(voi)
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
decision_current <- 2
nb_current <- 1
decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2)
nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2)
(evpi1 <- mean(nb_perfect) - nb_current)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
opp_loss <- nb_perfect - nb_current
mean(opp_loss)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
decision_current <- 2
nb_current <- 1
decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2)
nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2)
(evpi1 <- mean(nb_perfect) - nb_current)
opp_loss <- nb_perfect - nb_current
mean(opp_loss)
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
decision_current <- 2
nb_current <- 1
decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2)
nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2)
(evpi1 <- mean(nb_perfect) - nb_current)
opp_loss <- nb_perfect - nb_current
mean(opp_loss)
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
pkgdown::build_site()
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
library(voi)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
evppi(outputs_nb, inputs, pars=c("p1","p2"), method="inla")
library(peermodels)
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
peermodels::model_run(model_name="voiPrism", server = "http://localhost:5656/ocpu", model_input = list(outputs = outputs_nb, pars=c("p1","p2"), func="evppi", method="inla"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:5656/ocpu", model_input = list(outputs = outputs_nb,inputs=inputs, pars=c("p1","p2"), func="evppi", method="inla"))
peermodels::model_run(model_name="voiPrism", server = "http://localhost:5656/ocpu", model_input = list(outputs = outputs_nb, inputs = inputs, pars=list("p1","p2"), func="evppi"))
knitr::opts_chunk$set(echo = TRUE)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
# model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
# model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, func="evpi"))
set.seed(1)
nsam <- 10000
inputs <- data.frame(p1 = rnorm(nsam, 1, 1),
p2 = rnorm(nsam, 0, 2))
outputs_nb <- data.frame(t1 = 0,
t2 = inputs$p1 - inputs$p2)
outputs_cea <- list(
e = data.frame(t1 = 0, t2 = inputs$p1),
c = data.frame(t1 = 0, t2 = inputs$p2),
k = c(1, 2, 3)
)
library(peermodels)
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
reset_session()
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_nb, inputs = inputs, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, inputs = inputs, func="evpi"))
model_run(model_name="voi", api_key='aaHYJJb4hcrmBYY3', model_input = list(outputs = outputs_cea, inputs = inputs, func="evpi"))
